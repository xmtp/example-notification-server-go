// @generated by protoc-gen-connect-es v1.4.0
// @generated from file notifications/v1/service.proto (package notifications.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DeleteInstallationRequest, RegisterInstallationRequest, RegisterInstallationResponse, SubscribeRequest, SubscribeWithMetadataRequest, UnsubscribeRequest } from "./service_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service notifications.v1.Notifications
 */
export declare const Notifications: {
  readonly typeName: "notifications.v1.Notifications",
  readonly methods: {
    /**
     * @generated from rpc notifications.v1.Notifications.RegisterInstallation
     */
    readonly registerInstallation: {
      readonly name: "RegisterInstallation",
      readonly I: typeof RegisterInstallationRequest,
      readonly O: typeof RegisterInstallationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc notifications.v1.Notifications.DeleteInstallation
     */
    readonly deleteInstallation: {
      readonly name: "DeleteInstallation",
      readonly I: typeof DeleteInstallationRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc notifications.v1.Notifications.Subscribe
     */
    readonly subscribe: {
      readonly name: "Subscribe",
      readonly I: typeof SubscribeRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc notifications.v1.Notifications.SubscribeWithMetadata
     */
    readonly subscribeWithMetadata: {
      readonly name: "SubscribeWithMetadata",
      readonly I: typeof SubscribeWithMetadataRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc notifications.v1.Notifications.Unsubscribe
     */
    readonly unsubscribe: {
      readonly name: "Unsubscribe",
      readonly I: typeof UnsubscribeRequest,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
  }
};

